# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head==None:
            return None
        res_origin = []
        first = head
        while first:
            res_origin.append(first.val)
            first = first.next
        #res_rev = res_origin[::-1]
        head = ListNode(res_origin.pop())
        laste = head
        
        while res_origin!=[]:
            while laste.next:
                laste = laste.next
            laste.next = ListNode(res_origin.pop())  
        return head
