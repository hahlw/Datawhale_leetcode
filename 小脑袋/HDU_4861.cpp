#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
/*
int main()
{
    int k, p;
    int value[100];
    while(~scanf("%d%d", &k, &p)) {
        memset(value, 0, sizeof value);
        for(int i = 1; i <= k; i++) {
            for(int j = 1; j < p; j++) {
                value[i] = (int)(value[i] + pow(j, i)) % p;
            }
            printf("%d ", value[i]);
        }
        printf("\n");
    }
    return 0;
}
先打表找规律，结果如下：
50 2
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
50 3
0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 -2 -2 -2 -2 -2 -2 -2
 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2
50 5
0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3
 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3
50 7
0 0 0 0 0 6 0 0 0 0 0 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -
2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2
50 11
0 0 0 0 0 0 0 0 0 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2
 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2
50 13
0 0 0 0 0 0 0 0 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11
-11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11
-11 -11 -11 -11 -11 -11
50 17
0 0 0 0 0 0 0 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9
-9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9
20 2
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
20 3
0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2
20 5
0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 -3 -3 -3 -3 -3
20 7
0 0 0 0 0 6 0 0 0 0 0 -2 -2 -2 -2 -2 -2 -2 -2 -2
10 2
1 1 1 1 1 1 1 1 1 1
10 3
0 2 0 2 0 2 0 2 0 2
10 5
0 0 0 4 0 0 0 4 0 0
10 7
0 0 0 0 0 6 0 0 0 0
不难发现，质数为2时，结果111111...
         质数为3时，结果020202...
         质数为5时，结果004004...
         质数为7时，结果000006...
         其他质数时，结果全为0...
该题目求是否能赢，DouBiNan先选择，每次必取最大的，当i=p-1时，val=p-1，其他时候都是0，所以就看非0个数
*/

int main() {
    int k, p;
    while(~scanf("%d%d", &k, &p)) {
        if((k / (p-1)) % 2 == 1)
            std::cout << "YES" << std::endl;
        else
            std::cout << "NO" << std::endl;
    }
    return 0;
}
