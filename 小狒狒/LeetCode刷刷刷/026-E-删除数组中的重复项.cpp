class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int i(0);
        for(int j=1; j<nums.size(); j++){
            if(nums[i] != nums[j])
                i++;
                nums[i] = nums[j];
        }
        return i+1;
       
    }
};
//【思路】还是双指针的思路，比如遍历快的，如果遇到相等的，那就快指针+1（意思也就是跳过），一直到遇到了不相等的，那么这个时候就要把不相等的再给慢指针赋值过去！，
//注意因为慢的是第一个，不能直接赋值！所以就是应该漫的下一个才是这个新找到的不重复的元素！
//这里其实要注意的是i++要在拷贝之前进行，引入
//其实思路也是很简单，把第一个元素拿出来，然后后面的开始遍历
//如果不相等的话才更新nums[i] = nums[j]且i++
//否则数组就要一直进行for循环， 一直到找出那个不相等的为止！
